version: '3.5'

services:
  client:
    restart: always
    build:
      context: ./client
      dockerfile: Dockerfile
    volumes:
      - .:/usr/src/app
       -/usr/src/app/node_modules
    ports:
      - 8080:80
    depends_on:
      - server
    networks:
      front:

  database:
    restart: always
    build:
      context: ./db
      dockerfile: Dockerfile
    volumes:
      - ./data:/var/lib/postgresql/data
    networks:
      back:
    expose:
      - 5432
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PW=${POSTGRES_PW}
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    restart: always
    volumes:
      - ./server:/server
    ports:
      - 5001:5000
    networks:
      back:
      front:
        ipv4_address: 172.16.240.10
    environment:
      - APP_SETTINGS=${APP_SETTINGS}
      - FLASK_APP=${FLASK_APP}
      - FLASK_ENV=${FLASK_ENV}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PW=${POSTGRES_PW}
      - REDIS_PW=${REDIS_PW}
      - DATABASE=${DATABASE}
      - SECRET_KEY=${SECRET_KEY}
      - JWT_SECRET_KEY=${JWT_SECRET}




  redis:
    image: redis:latest
    restart: always
    command: redis-server --requirepass ${REDIS_PW}
    expose:
      - 6379
    networks:
      back:


  task_queue:
    restart: always
    build:
      context: ./server/tasks
      dockerfile: Dockerfile
    volumes:
      - ./server:/app
    command: celery -A tasks worker  --loglevel=info
    environment:
      - REDIS_PW=${REDIS_PW}

    networks:
      back:
    depends_on:
      - redis

  monitor:
    restart: always
    build:
      context: ./server/tasks
      dockerfile: Dockerfile
    ports:
      - 5555:5555
    volumes:
      - ./server/:/app
    entrypoint: flower
    command: -A tasks worker --port=5555 --broker=redis://:${REDIS_PW}@redis:6379/1
    networks:
      back:
    depends_on:
      - redis

networks:
  front:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: "172.16.240.0/24"

  back:
