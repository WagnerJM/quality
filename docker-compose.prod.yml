version: '3.5'

services:
  client:
    container_name: client
    build:
      context: ./client
      dockerfile: Dockerfile
    volumes:
      - .:/usr/src/app
       -/usr/src/app/node_modules
    ports:
      - 8080:80
    depends_on:
      - server
    networks:
      front:

  server:
    container_name: server
    build:
      context: ./server
      dockerfile: Dockerfile.prod
    restart: always
    volumes:
      - ./server:/server
    expose:
      - "8000"
    networks:
      back:
      front:
        ipv4_address: 172.16.238.10
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PW=${POSTGRES_PW}
      - REDIS_PW=${REDIS_PW}
      - DATABASE=${DATABASE}
      - SECRET_KEY=${SECRET_KEY}
      - JWT_SECRET_KEY=${JWT_SECRET}
    command: gunicorn -w 4 -b :8000 wsgi:app
    
  database:
    container_name: database
    build:
      context: ./db
      dockerfile: Dockerfile
    volumes:
      - ./data:/var/lib/postgresql/data
    networks:
      back:
    expose:
      - 5432
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PW=${POSTGRES_PW}


networks:
  front:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: "172.16.238.0/24"

  back:
